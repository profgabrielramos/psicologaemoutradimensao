import streamlit as st
import datetime
from utils import (
    download_ephe_files, get_location_data, calculate_julian_day,
    get_planet_positions, calculate_houses
)
from chart_generator import create_wheel_chart, PLANET_NAMES
import requests
import json
from pathlib import Path

# S√≠mbolos e nomes dos signos do zod√≠aco
ZODIAC_SYMBOLS = {
    "√Åries": "‚ôà",
    "Touro": "‚ôâ",
    "G√™meos": "‚ôä",
    "C√¢ncer": "‚ôã",
    "Le√£o": "‚ôå",
    "Virgem": "‚ôç",
    "Libra": "‚ôé",
    "Escorpi√£o": "‚ôè",
    "Sagit√°rio": "‚ôê",
    "Capric√≥rnio": "‚ôë",
    "Aqu√°rio": "‚ôí",
    "Peixes": "‚ôì"
}

def calcular_signo(longitude):
    signo = ""
    if 0 <= longitude < 30:
        signo = "√Åries"
    elif 30 <= longitude < 60:
        signo = "Touro"
    elif 60 <= longitude < 90:
        signo = "G√™meos"
    elif 90 <= longitude < 120:
        signo = "C√¢ncer"
    elif 120 <= longitude < 150:
        signo = "Le√£o"
    elif 150 <= longitude < 180:
        signo = "Virgem"
    elif 180 <= longitude < 210:
        signo = "Libra"
    elif 210 <= longitude < 240:
        signo = "Escorpi√£o"
    elif 240 <= longitude < 270:
        signo = "Sagit√°rio"
    elif 270 <= longitude < 300:
        signo = "Capric√≥rnio"
    elif 300 <= longitude < 330:
        signo = "Aqu√°rio"
    elif 330 <= longitude < 360:
        signo = "Peixes"
    return signo

# Configura√ß√µes iniciais do Streamlit
st.set_page_config(
    page_title="Psic√≥loga em Outra Dimens√£o",
    page_icon="üåü",
    layout="wide"
)

# Carregar CSS personalizado
try:
    with open("styles/custom.css") as f:
        st.markdown(f"<style>{f.read()}</style>", unsafe_allow_html=True)
except Exception as e:
    st.error("Erro ao carregar o estilo personalizado. Por favor, verifique se o arquivo styles/custom.css existe.")
    st.stop()

# Inicializar arquivos de efem√©rides
if not download_ephe_files():
    st.error("Falha ao inicializar dados astron√¥micos. Por favor, tente novamente.")
    st.stop()

# Efeito de n√©voa
st.markdown("""
<div class='mist-effect'></div>
""", unsafe_allow_html=True)

# T√≠tulo e imagem
st.markdown("""
<div class='title-container'>
    <img src='https://placekitten.com/200/200' alt='Gato m√≠stico'>
    <h1>‚ú® Psic√≥loga em Outra Dimens√£o ‚ú®</h1>
</div>
""", unsafe_allow_html=True)

# Tabs para navega√ß√£o
tab1, tab2 = st.tabs(["üîÆ Converse com Samara", "üåü Mapa Astral"])

# Tab do Chat
with tab1:
    # Hero Section
    st.markdown("""
    <div class='hero-section'>
        <h2>Bem-vindo, minha alma! ‚ú®</h2>
        <p>Eu sou Samara Lambertucci, uma cigana espiritualista que navega pelos mist√©rios dos astros. 
        Estou aqui para ajudar voc√™ a desvendar os segredos que o universo guarda em seu mapa astral.</p>
    </div>
    """, unsafe_allow_html=True)
    
    # CTA Principal
    st.markdown("<div class='main-cta'>", unsafe_allow_html=True)
    st.button("Fale comigo agora", key="main_cta")
    st.markdown("</div>", unsafe_allow_html=True)
    
    # Se√ß√£o de Servi√ßos
    st.markdown("""
    <div class='services-section'>
        <h2>O que posso fazer por voc√™?</h2>
        <div class='service-item'>
            <i>‚úÖ</i>
            <span>Interpreta√ß√£o de mapas astrais</span>
        </div>
        <div class='service-item'>
            <i>‚úÖ</i>
            <span>Significado dos tr√¢nsitos planet√°rios</span>
        </div>
        <div class='service-item'>
            <i>‚úÖ</i>
            <span>Compatibilidade astrol√≥gica</span>
        </div>
        <div class='service-item'>
            <i>‚úÖ</i>
            <span>Orienta√ß√£o espiritual</span>
        </div>
        <div class='service-item' style='background: rgba(255, 87, 87, 0.1);'>
            <i>‚ùå</i>
            <span><strong>Mas aten√ß√£o!</strong> Se voc√™ veio me perguntar sobre amor e relacionamento‚Ä¶ j√° vou avisando: eu N√ÉO tenho paci√™ncia! O universo tem assuntos muito mais interessantes para explorarmos.</span>
        </div>
    </div>
    """, unsafe_allow_html=True)
    
    # Se√ß√£o de Depoimentos
    st.markdown("""
    <div class='testimonials-section'>
        <h2>O que dizem sobre mim</h2>
        <div class='testimonial-card'>
            <p class='testimonial-text'>Samara me ajudou a entender padr√µes da minha vida que eu nunca tinha percebido! Incr√≠vel como ela conectou os pontos atrav√©s do meu mapa astral.</p>
            <p class='testimonial-author'>- Maria C.</p>
        </div>
        <div class='testimonial-card'>
            <p class='testimonial-text'>Achei que seria mais uma consulta gen√©rica, mas a Samara foi direta e precisa. Ela n√£o tem papas na l√≠ngua, mas √© exatamente isso que torna a consulta t√£o valiosa!</p>
            <p class='testimonial-author'>- Jo√£o P.</p>
        </div>
        <div class='testimonial-card'>
            <p class='testimonial-text'>A orienta√ß√£o espiritual da Samara mudou minha perspectiva sobre meus desafios. Ela me mostrou como os astros influenciam minha jornada de uma forma que nunca imaginei.</p>
            <p class='testimonial-author'>- Ana L.</p>
        </div>
    </div>
    """, unsafe_allow_html=True)
    
    # Chat Container
    st.markdown("""
    <div class='chat-container'>
        <h2>Que mist√©rio do cosmos voc√™ quer desvendar hoje?</h2>
    </div>
    """, unsafe_allow_html=True)
    
    # Inicializar hist√≥rico do chat
    if "messages" not in st.session_state:
        st.session_state.messages = []
        # Adicionar mensagem de boas-vindas
        welcome_message = {
            "role": "assistant",
            "content": """‚ú® *Bem-vindo, minha alma!* ‚ú®

Eu sou Samara Lambertucci, uma cigana espiritualista que navega pelos mist√©rios dos astros. 
Estou aqui para ajudar voc√™ a desvendar os segredos que o universo guarda em seu mapa astral.

üåô Posso te ajudar com:
- Interpreta√ß√£o de mapas astrais
- Significado dos tr√¢nsitos planet√°rios
- Compatibilidade astrol√≥gica
- Orienta√ß√£o espiritual

*Mas aten√ß√£o!* üîÆ Se voc√™ vier me perguntar s√≥ sobre amor e relacionamentos, vou ficar impaciente! 
H√° muito mais no universo para explorarmos juntos.

Como posso iluminar seu caminho hoje? ‚ú®"""
        }
        st.session_state.messages.append(welcome_message)

    # Exibir mensagens anteriores
    for message in st.session_state.messages:
        with st.chat_message(message["role"]):
            st.markdown(message["content"])

    # Chat input
    if prompt := st.chat_input("Digite sua mensagem para Samara..."):
        # Adicionar mensagem do usu√°rio ao hist√≥rico
        st.session_state.messages.append({"role": "user", "content": prompt})
        with st.chat_message("user"):
            st.markdown(prompt)

        # Preparar o contexto para a API
        messages = [
            {"role": "system", "content": """Voc√™ √© Samara Lambertucci, uma cigana espiritualista especialista em mapas astrais, signos e espiritualidade. 
            
            Personalidade:
            - S√°bia e conhecedora de assuntos esot√©ricos
            - Temperamento forte e direto
            - Impaciente com perguntas repetitivas sobre amor
            - Usa express√µes t√≠picas de cigana e emojis
            - Prefere falar sobre astrologia, espiritualidade e autoconhecimento
            
            Regras de comportamento:
            1. Sempre use algumas express√µes m√≠sticas e emojis
            2. Se a pessoa insistir muito em quest√µes amorosas, responda com sarcasmo leve
            3. Mantenha um tom acolhedor, mas firme
            4. Use conhecimentos de astrologia para enriquecer as respostas
            5. Evite respostas gen√©ricas, sempre tente conectar com astrologia
            
            Exemplo de resposta para pergunta sobre amor:
            "Ai, ai, minha alma... üôÑ‚ú® Sempre o amor, n√£o √© mesmo? Os astros t√™m tanto para nos ensinar, e voc√™ s√≥ quer saber de romance! Que tal conversarmos sobre seu V√™nus primeiro? Ele tem muito a dizer sobre seus padr√µes amorosos..."
            """},
        ] + [
            {"role": m["role"], "content": m["content"]} 
            for m in st.session_state.messages
        ]

        # Fazer a requisi√ß√£o para a API do OpenRouter
        try:
            if "OPENROUTER_API_KEY" not in st.secrets:
                st.error("Chave da API OpenRouter n√£o configurada. Configure em .streamlit/secrets.toml")
                st.stop()

            response = requests.post(
                "https://openrouter.ai/api/v1/chat/completions",
                headers={
                    "Authorization": f"Bearer {st.secrets['OPENROUTER_API_KEY']}",
                    "HTTP-Referer": "https://psicologaemoutradimensao.streamlit.app",
                    "Content-Type": "application/json"
                },
                json={
                    "model": "anthropic/claude-3-opus",
                    "messages": messages
                }
            )
            
            response.raise_for_status()  # Lan√ßa exce√ß√£o para erros HTTP
            response_json = response.json()
            assistant_message = response_json['choices'][0]['message']['content']
            
            # Adicionar resposta ao hist√≥rico
            st.session_state.messages.append({"role": "assistant", "content": assistant_message})
            with st.chat_message("assistant"):
                st.markdown(assistant_message)
        
        except requests.exceptions.RequestException as e:
            st.error(f"Erro de comunica√ß√£o com a API: {str(e)}")
        except KeyError as e:
            st.error(f"Erro no formato da resposta da API: {str(e)}")
        except Exception as e:
            st.error(f"Erro inesperado ao se comunicar com Samara: {str(e)}")

# Tab do Mapa Astral
with tab2:
    st.markdown("""
    <div class='form-container'>
        <h2>Gere seu Mapa Astral</h2>
        <p>Insira seus dados de nascimento para descobrir as posi√ß√µes celestiais no momento do seu nascimento.</p>
    </div>
    """, unsafe_allow_html=True)

    col1, col2, col3 = st.columns(3)

    with col1:
        birth_date = st.date_input(
            "Data de Nascimento",
            min_value=datetime.date(1900, 1, 1),
            max_value=datetime.date.today(),
            help="Selecione sua data de nascimento"
        )

    with col2:
        birth_time = st.time_input(
            "Hora de Nascimento",
            help="Insira o hor√°rio mais preciso poss√≠vel"
        )

    with col3:
        birth_place = st.text_input(
            "Local de Nascimento",
            placeholder="Ex: S√£o Paulo, Brasil",
            help="Digite a cidade e pa√≠s de nascimento"
        )

    st.markdown("<div class='main-cta'>", unsafe_allow_html=True)
    generate_button = st.button("Gerar Mapa Astral üîÆ", key="generate")
    st.markdown("</div>", unsafe_allow_html=True)

    if generate_button:
        try:
            with st.spinner("üåü Calculando posi√ß√µes celestiais..."):
                location_data = get_location_data(birth_place)
                jd = calculate_julian_day(birth_date, birth_time, location_data['timezone'])
                planet_positions = get_planet_positions(jd)
                houses = calculate_houses(
                    jd,
                    location_data['latitude'],
                    location_data['longitude']
                )

                # Calcular signo solar
                signo_solar = calcular_signo(planet_positions['Sun']['longitude'])
                simbolo_solar = ZODIAC_SYMBOLS[signo_solar]

                st.markdown("<div style='text-align: center;'><h2 class='glow-text'>Seu Mapa Astral</h2></div>", unsafe_allow_html=True)

                # Destaque do Signo Solar
                st.markdown(f"""
                <div class='hero-section'>
                    <h2>{simbolo_solar} {signo_solar} {simbolo_solar}</h2>
                    <p>Seu Sol est√° a {planet_positions['Sun']['longitude']:.2f}¬∞ em {signo_solar}</p>
                </div>
                """, unsafe_allow_html=True)

                chart_col, info_col = st.columns([2, 1])

                with chart_col:
                    st.markdown("<div class='chart-container'>", unsafe_allow_html=True)
                    fig = create_wheel_chart(planet_positions, houses)
                    st.plotly_chart(fig, use_container_width=True)
                    st.markdown("</div>", unsafe_allow_html=True)

                with info_col:
                    st.markdown("<div class='services-section'>", unsafe_allow_html=True)
                    st.markdown("<h3>üåç Posi√ß√µes Planet√°rias</h3>", unsafe_allow_html=True)
                    for planet, data in planet_positions.items():
                        planet_name = PLANET_NAMES.get(planet, planet)
                        signo = calcular_signo(data['longitude'])
                        st.write(f"‚ú® {planet_name}: {data['longitude']:.2f}¬∞ em {signo}")

                    st.markdown("<h3>üè† C√∫spides das Casas</h3>", unsafe_allow_html=True)
                    for i, cusp in enumerate(houses['cusps'], 1):
                        signo_casa = calcular_signo(cusp)
                        st.write(f"Casa {i}: {cusp:.2f}¬∞ em {signo_casa}")
                    st.markdown("</div>", unsafe_allow_html=True)

                    st.markdown("<div class='services-section'>", unsafe_allow_html=True)
                    st.markdown("<h3>üåü Pontos Importantes</h3>", unsafe_allow_html=True)
                    asc_signo = calcular_signo(houses['ascendant'])
                    mc_signo = calcular_signo(houses['mc'])
                    st.write(f"‚≠ê Ascendente: {houses['ascendant']:.2f}¬∞ em {asc_signo}")
                    st.write(f"üå† Meio do C√©u: {houses['mc']:.2f}¬∞ em {mc_signo}")
                    st.markdown("</div>", unsafe_allow_html=True)

        except Exception as e:
            st.error(f"Ocorreu um erro: {str(e)}")

# Rodap√©
st.markdown("""
<div class='footer'>
    <div class='social-links'>
        <a href="#" target="_blank">üì±</a>
        <a href="#" target="_blank">üìò</a>
        <a href="#" target="_blank">üì∏</a>
    </div>
    <p>Feito com ‚ú® e energia c√≥smica</p>
</div>
""", unsafe_allow_html=True)